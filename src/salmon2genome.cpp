#include <iostream>
#include <math.h>
#include <sys/time.h>
#include <unistd.h>
#include <htslib/sam.h>
#include <string.h>
#include <sstream>

#include "arg_parse.h"

#include "GVec.hh"
#include "tokenize.h"
#include "map2gff_salmon.h"

// salmon2genome -g ~/JHU/transcriptome/hisatTrans2Genome/errorData/me_mi/data/ann.gff -i ~/JHU/transcriptome/hisatTrans2Genome/errorData/me_mi/al_1/sample.gffread.bam -s ~/JHU/transcriptome/hisatTrans2Genome/errorData/me_mi/data/genomic_header.sam -o ./test.bam

enum Opt {TLST_FP   = 't',
    IN_AL     = 'i',
    OUT_AL    = 'o',
    GEN_HDR   = 's',
    THREADS   = 'p',
    ABUNDANCES= 'a',
    MULTI     = 'm',
    NUM_TRANS = 'n'};

int main(int argc, char** argv) {

    ArgParse args("salmon2genome");
    args.add_string(Opt::TLST_FP,"tlst","","list of transcripts generated by the gtf_to_fasta with .tlst extension",true);
    args.add_string(Opt::IN_AL,"input","","input alignment SAM/BAM",true);
    args.add_string(Opt::OUT_AL,"output","","output file path (BAM)",true);
    args.add_string(Opt::GEN_HDR,"header","","path to the header file as generated by gtf_to_fasta with .header extension",true);
    args.add_int(Opt::THREADS,"threads",1,"number of threads (default = 1)",false);
    args.add_string(Opt::ABUNDANCES,"abund","","transcript abundance file from salmon. Only in the salmon mode",true);
    args.add_string(Opt::MULTI,"multi","","the multimapper file required for both multimapper augmentation (non-salmon mode) and for multimapper likelihood assignment (all modes)",false);
    args.add_int(Opt::NUM_TRANS,"numtrans",0,"number of indexed transcripts",true);

    if(strcmp(argv[1],"--help")==0){
        std::cerr<<args.get_help()<<std::endl;
        exit(1);
    }

    args.parse_args(argc,argv);

    Map2GFF_SALMON gffMapper(args.get_string(Opt::TLST_FP),args.get_string(Opt::IN_AL),args.get_string(Opt::ABUNDANCES),args.get_string(Opt::GEN_HDR),args.get_string(Opt::OUT_AL),args.get_int(Opt::THREADS),args.get_int(Opt::NUM_TRANS));
    gffMapper.convert_coords();
    return 0;
}
